{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Error/Error.js","components/Modal/Modal.js","api/images-api.js","components/App.js","index.js"],"names":["SearchBar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","src","srcOriginal","id","alt","getLargeImageURL","data-source","data-id","onClick","target","dataset","source","ImageGallery","images","onImageClick","map","item","key","webformatURL","largeImageURL","tags","Button","onLoadMore","App","color","height","width","timeout","React","Error","error","defaultProps","modalRoot","document","querySelector","Modal","onEscPress","code","closeModal","onCloseModal","window","addEventListener","removeEventListener","createPortal","axios","defaults","baseURL","searchQuery","currentPage","pageSize","get","then","response","data","hits","isLoading","showModal","originalImageURL","onChangeQuery","fetchImg","options","imagesApi","prevState","catch","finally","handleClickImage","openModal","prevProps","smoothScrol","scrollTo","top","documentElement","scrollHeight","behavior","buttonIsShown","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ada1c7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchBar extends Component {\n    state = { query: '' };\n\n    handleChange = event => {\n        this.setState({ query: event.currentTarget.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state.query);\n\n        this.setState({ query: '' });\n    };\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\"></span>\n                    </button>\n                    <input\n                        className=\"SearchForm-input\"\n                        value={this.state.query}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        autoComplete=\"on\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n    src,\n    srcOriginal,\n    id,\n    alt,\n    getLargeImageURL,\n}) {\n    const handleClick = event => getLargeImageURL(event.target.dataset.source);\n\n    return (\n        <li className=\"ImageGalleryItem\">\n            <img\n                src={src}\n                alt={alt}\n                data-source={srcOriginal}\n                data-id={id}\n                className=\"ImageGalleryItem-image\"\n                onClick={handleClick}\n            />\n        </li>\n    );\n}\n\nImageGalleryItem.propTypes = {\n    src: PropTypes.string.isRequired,\n    srcOriginal: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    alt: PropTypes.string,\n    getLargeImageURL: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem';\n\nexport default function ImageGallery({ images, onImageClick }) {\n    return (\n        <ul className=\"ImageGallery\">\n            {images.map(item => (\n                <ImageGalleryItem\n                    key={item.id}\n                    src={item.webformatURL}\n                    srcOriginal={item.largeImageURL}\n                    id={item.id}\n                    alt={item.tags}\n                    getLargeImageURL={onImageClick}\n                ></ImageGalleryItem>\n            ))}\n        </ul>\n    );\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.array.isRequired,\n    onImageClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onLoadMore }) => (\n    <div className=\"Button-container\">\n        <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n            Load more\n        </button>\n    </div>\n);\n\nButton.propTypes = {\n    onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div className=\"Loader-container\">\n                <Loader\n                    type=\"Oval\"\n                    color=\"#3f51b5\"\n                    height={100}\n                    width={100}\n                    timeout={3000}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ error }) => (\n    <div className=\"Error-container\">\n        <p className=\"Error-title\">Load error:</p>\n        <p className=\"Error-description\">{error}</p>\n    </div>\n);\n\nError.defaultProps = {\n    error: 'Unknown error. Please, try later.',\n};\n\nError.propTypes = {\n    error: PropTypes.string,\n};\n\nexport default Error;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends React.Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.onEscPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onEscPress);\n    }\n\n    onEscPress = event => {\n        if (event.code === 'Escape') {\n            this.props.closeModal();\n        }\n    };\n\n    onCloseModal = event => {\n        if (event.target === event.currentTarget) {\n            this.props.closeModal();\n        }\n    };\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\" onClick={this.onCloseModal}>\n                <div className=\"Modal\">\n                    <img src={this.props.largeImageURL} alt=\"\" />\n                </div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nModal.propTypes = {\n    largeImageURL: PropTypes.string.isRequired,\n    closeModal: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com';\nconst apiKey = '17488430-d244df9e1a1645d78232e5491';\n\nconst fetchImages = ({ searchQuery = '', currentPage = 1, pageSize = 10 }) => {\n    return axios\n        .get(\n            `/api/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\n        )\n        .then(response => response.data.hits);\n};\n\nexport default { fetchImages };\n","import React, { Component } from 'react';\n\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Button from './Button';\nimport Loader from './Loader';\nimport Error from './Error';\nimport Modal from './Modal';\n\nimport imagesApi from '../api/images-api';\n\nexport default class App extends Component {\n    state = {\n        images: [],\n        searchQuery: '',\n        currentPage: 1,\n        isLoading: false,\n        showModal: false,\n        originalImageURL: null,\n        error: null,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.fetchImg();\n        }\n\n        if (\n            this.state.currentPage > 2 &&\n            prevState.currentPage !== this.state.currentPage\n        ) {\n            this.smoothScrol();\n        }\n    }\n\n    onChangeQuery = query => {\n        this.setState({\n            searchQuery: query,\n            currentPage: 1,\n            images: [],\n            error: null,\n            showModal: false,\n        });\n    };\n\n    fetchImg = () => {\n        const { currentPage, searchQuery } = this.state;\n        const options = { searchQuery, currentPage };\n\n        this.setState({ isLoading: true });\n\n        imagesApi\n            .fetchImages(options)\n            .then(hits => {\n                this.setState(prevState => ({\n                    images: [...prevState.images, ...hits],\n                    currentPage: prevState.currentPage + 1,\n                }));\n            })\n            .catch(error => this.setState({ error }))\n            .finally(() => this.setState({ isLoading: false }));\n    };\n\n    handleClickImage = largeImageURL => {\n        this.openModal(largeImageURL);\n    };\n\n    openModal = largeImageURL =>\n        this.setState({ showModal: true, originalImageURL: largeImageURL });\n\n    closeModal = () =>\n        this.setState({ showModal: false, originalImageURL: '' });\n\n    smoothScrol() {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    }\n\n    render() {\n        const {\n            images,\n            isLoading,\n            error,\n            showModal,\n            originalImageURL,\n        } = this.state;\n\n        const buttonIsShown = images.length > 0 && !isLoading;\n\n        return (\n            <>\n                {error && <Error />}\n\n                <Searchbar onSubmit={this.onChangeQuery} />\n\n                <ImageGallery\n                    images={images}\n                    onImageClick={this.handleClickImage}\n                />\n\n                {showModal && (\n                    <Modal\n                        largeImageURL={originalImageURL}\n                        closeModal={this.closeModal}\n                    ></Modal>\n                )}\n\n                {isLoading && <Loader />}\n\n                {buttonIsShown && <Button onLoadMore={this.fetchImg} />}\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}